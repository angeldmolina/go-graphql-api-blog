type Post {
  id: ID!
  title: String!
  content: String!
  createdAt: String!
  updatedAt: String!
  author: Author!
  likes: Int!
  comments: [Comment!]!
}

type Author {
  id: ID!
  name: String!
  email: String!
  bio: String
  website: String
  posts: [Post!]!
}

type Comment {
  id: ID!
  content: String!
  createdAt: String!
  updatedAt: String!
  author: Author!
  likes: Int!
}

type Query {
  getAllPosts: [Post!]!
  getPostByID(id: ID!): Post!
  getPostsByAuthorId(authorId: ID!): [Post!]!
  getAllComments: [Comment!]!
  getCommentByID(id: ID!): Comment!
  getCommentsByAuthorId(authorId: ID!): [Comment!]!
}

input EditedPost {
  title: String!
  content: String!
}

input EditedComment {
  content: String!
}

type Mutation {
  addPost(authorId: ID!, input: EditedPost!): Post!
  updatePost(id: ID!, input: EditedPost!): Post!
  deletePost(id: ID!): Boolean!
  addComment(authorId: ID!, postId: ID!, input: EditedComment!): Comment!
  updateComment(id: ID!, input: EditedComment!): Comment!
  deleteComment(id: ID!): Boolean!
  addAuthor(name: String!, email: String!, bio: String, website: String): Author!
  updateAuthor(id: ID!, name: String!, email: String!, bio: String, website: String): Author!
  deleteAuthor(id: ID!): Boolean!
  likePost(id: ID!): Post!
  likeComment(id: ID!): Comment!
}
